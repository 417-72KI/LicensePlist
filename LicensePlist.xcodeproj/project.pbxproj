// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		OBJ_158 /* Case.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_132 /* Case.swift */; };
		OBJ_159 /* Context.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_133 /* Context.swift */; };
		OBJ_160 /* Expectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_134 /* Expectation.swift */; };
		OBJ_161 /* Failure.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_135 /* Failure.swift */; };
		OBJ_162 /* Global.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_136 /* Global.swift */; };
		OBJ_163 /* GlobalContext.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_137 /* GlobalContext.swift */; };
		OBJ_164 /* Reporter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_138 /* Reporter.swift */; };
		OBJ_165 /* Reporters.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_139 /* Reporters.swift */; };
		OBJ_172 /* ArgumentConvertible.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_122 /* ArgumentConvertible.swift */; };
		OBJ_173 /* ArgumentDescription.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_123 /* ArgumentDescription.swift */; };
		OBJ_174 /* ArgumentParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_124 /* ArgumentParser.swift */; };
		OBJ_175 /* Command.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_125 /* Command.swift */; };
		OBJ_176 /* CommandRunner.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_126 /* CommandRunner.swift */; };
		OBJ_177 /* Commands.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_127 /* Commands.swift */; };
		OBJ_178 /* CommandType.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_128 /* CommandType.swift */; };
		OBJ_179 /* Error.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_129 /* Error.swift */; };
		OBJ_180 /* Group.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_130 /* Group.swift */; };
		OBJ_182 /* Spectre.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_141 /* Spectre.framework */; };
		OBJ_189 /* Casting.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_110 /* Casting.swift */; };
		OBJ_190 /* Decodable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_111 /* Decodable.swift */; };
		OBJ_191 /* decode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_112 /* decode.swift */; };
		OBJ_192 /* DecodeError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_113 /* DecodeError.swift */; };
		OBJ_193 /* Extractor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_114 /* Extractor.swift */; };
		OBJ_194 /* KeyPath.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_115 /* KeyPath.swift */; };
		OBJ_195 /* NSNumber.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_116 /* NSNumber.swift */; };
		OBJ_196 /* Operators.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_117 /* Operators.swift */; };
		OBJ_197 /* RawRepresentable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_118 /* RawRepresentable.swift */; };
		OBJ_198 /* StandardLib.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_119 /* StandardLib.swift */; };
		OBJ_199 /* Transformer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_120 /* Transformer.swift */; };
		OBJ_206 /* Result.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_107 /* Result.swift */; };
		OBJ_207 /* ResultProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_108 /* ResultProtocol.swift */; };
		OBJ_214 /* CallbackQueue.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_78 /* CallbackQueue.swift */; };
		OBJ_215 /* HTTPMethod.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_79 /* HTTPMethod.swift */; };
		OBJ_216 /* Request.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_80 /* Request.swift */; };
		OBJ_217 /* Session.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_81 /* Session.swift */; };
		OBJ_218 /* Unavailable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_82 /* Unavailable.swift */; };
		OBJ_219 /* BodyParameters.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_84 /* BodyParameters.swift */; };
		OBJ_220 /* Data+InputStream.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_85 /* Data+InputStream.swift */; };
		OBJ_221 /* FormURLEncodedBodyParameters.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_86 /* FormURLEncodedBodyParameters.swift */; };
		OBJ_222 /* JSONBodyParameters.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_87 /* JSONBodyParameters.swift */; };
		OBJ_223 /* MultipartFormDataBodyParameters.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_88 /* MultipartFormDataBodyParameters.swift */; };
		OBJ_224 /* ProtobufBodyParameters.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_89 /* ProtobufBodyParameters.swift */; };
		OBJ_225 /* DataParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_91 /* DataParser.swift */; };
		OBJ_226 /* FormURLEncodedDataParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_92 /* FormURLEncodedDataParser.swift */; };
		OBJ_227 /* JSONDataParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_93 /* JSONDataParser.swift */; };
		OBJ_228 /* ProtobufDataParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_94 /* ProtobufDataParser.swift */; };
		OBJ_229 /* StringDataParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_95 /* StringDataParser.swift */; };
		OBJ_230 /* RequestError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_97 /* RequestError.swift */; };
		OBJ_231 /* ResponseError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_98 /* ResponseError.swift */; };
		OBJ_232 /* SessionTaskError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_99 /* SessionTaskError.swift */; };
		OBJ_233 /* URLEncodedSerialization.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_101 /* URLEncodedSerialization.swift */; };
		OBJ_234 /* SessionAdapter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_103 /* SessionAdapter.swift */; };
		OBJ_235 /* URLSessionAdapter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_104 /* URLSessionAdapter.swift */; };
		OBJ_237 /* Result.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_144 /* Result.framework */; };
		OBJ_244 /* Logger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_75 /* Logger.swift */; };
		OBJ_251 /* HeliumLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_71 /* HeliumLogger.swift */; };
		OBJ_252 /* HeliumStreamLogger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_72 /* HeliumStreamLogger.swift */; };
		OBJ_254 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_146 /* LoggerAPI.framework */; };
		OBJ_261 /* SWXMLHash+TypeConversion.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_67 /* SWXMLHash+TypeConversion.swift */; };
		OBJ_262 /* SWXMLHash.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_68 /* SWXMLHash.swift */; };
		OBJ_269 /* Yaml.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_60 /* Yaml.swift */; };
		OBJ_270 /* YAMLOperators.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_61 /* YAMLOperators.swift */; };
		OBJ_271 /* YAMLParser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_62 /* YAMLParser.swift */; };
		OBJ_272 /* YAMLRegex.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_63 /* YAMLRegex.swift */; };
		OBJ_273 /* YAMLResult.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_64 /* YAMLResult.swift */; };
		OBJ_274 /* YAMLTokenizer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_65 /* YAMLTokenizer.swift */; };
		OBJ_281 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* main.swift */; };
		OBJ_283 /* Spectre.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_141 /* Spectre.framework */; };
		OBJ_284 /* Commander.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_142 /* Commander.framework */; };
		OBJ_285 /* Himotoki.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_143 /* Himotoki.framework */; };
		OBJ_286 /* Result.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_144 /* Result.framework */; };
		OBJ_287 /* APIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_145 /* APIKit.framework */; };
		OBJ_288 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_146 /* LoggerAPI.framework */; };
		OBJ_289 /* HeliumLogger.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_147 /* HeliumLogger.framework */; };
		OBJ_290 /* SWXMLHash.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_148 /* SWXMLHash.framework */; };
		OBJ_291 /* Yaml.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_149 /* Yaml.framework */; };
		OBJ_292 /* LicensePlistCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_151 /* LicensePlistCore.framework */; };
		OBJ_308 /* ConfigLoader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* ConfigLoader.swift */; };
		OBJ_309 /* Consts.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Consts.swift */; };
		OBJ_310 /* LicensePlist.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* LicensePlist.swift */; };
		OBJ_311 /* Logger.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Logger.swift */; };
		OBJ_312 /* ResultOperation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* ResultOperation.swift */; };
		OBJ_313 /* Shell.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Shell.swift */; };
		OBJ_314 /* TemplateManager.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* TemplateManager.swift */; };
		OBJ_315 /* Collector.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Collector.swift */; };
		OBJ_316 /* GitHubLicense.collector.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* GitHubLicense.collector.swift */; };
		OBJ_317 /* CocoaPods.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* CocoaPods.swift */; };
		OBJ_318 /* Config.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* Config.swift */; };
		OBJ_319 /* GitHub.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* GitHub.swift */; };
		OBJ_320 /* Library.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* Library.swift */; };
		OBJ_321 /* License.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* License.swift */; };
		OBJ_322 /* APIKit.extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* APIKit.extension.swift */; };
		OBJ_323 /* Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* Extensions.swift */; };
		OBJ_324 /* URL.extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* URL.extension.swift */; };
		OBJ_325 /* GitHubRequest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* GitHubRequest.swift */; };
		OBJ_326 /* RepoRequests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* RepoRequests.swift */; };
		OBJ_327 /* SearchRequests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* SearchRequests.swift */; };
		OBJ_328 /* CocoaPods.parser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* CocoaPods.parser.swift */; };
		OBJ_329 /* GitHub.parser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* GitHub.parser.swift */; };
		OBJ_330 /* Parser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* Parser.swift */; };
		OBJ_332 /* Spectre.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_141 /* Spectre.framework */; };
		OBJ_333 /* Commander.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_142 /* Commander.framework */; };
		OBJ_334 /* Himotoki.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_143 /* Himotoki.framework */; };
		OBJ_335 /* Result.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_144 /* Result.framework */; };
		OBJ_336 /* APIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_145 /* APIKit.framework */; };
		OBJ_337 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_146 /* LoggerAPI.framework */; };
		OBJ_338 /* HeliumLogger.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_147 /* HeliumLogger.framework */; };
		OBJ_339 /* SWXMLHash.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_148 /* SWXMLHash.framework */; };
		OBJ_340 /* Yaml.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_149 /* Yaml.framework */; };
		OBJ_355 /* ConfigLoaderTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* ConfigLoaderTests.swift */; };
		OBJ_356 /* GtiHubClientTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* GtiHubClientTests.swift */; };
		OBJ_357 /* ResultOperationTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* ResultOperationTests.swift */; };
		OBJ_358 /* TemplateManagerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* TemplateManagerTests.swift */; };
		OBJ_359 /* TestUtil.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_45 /* TestUtil.swift */; };
		OBJ_360 /* URL.extensionTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* URL.extensionTests.swift */; };
		OBJ_361 /* GitHubLicense.collectorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* GitHubLicense.collectorTests.swift */; };
		OBJ_362 /* CocoaPodsLicense.parserTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_50 /* CocoaPodsLicense.parserTests.swift */; };
		OBJ_363 /* GitHub.parserTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* GitHub.parserTests.swift */; };
		OBJ_365 /* Spectre.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_141 /* Spectre.framework */; };
		OBJ_366 /* Commander.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_142 /* Commander.framework */; };
		OBJ_367 /* Himotoki.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_143 /* Himotoki.framework */; };
		OBJ_368 /* Result.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_144 /* Result.framework */; };
		OBJ_369 /* APIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_145 /* APIKit.framework */; };
		OBJ_370 /* LoggerAPI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_146 /* LoggerAPI.framework */; };
		OBJ_371 /* HeliumLogger.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_147 /* HeliumLogger.framework */; };
		OBJ_372 /* SWXMLHash.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_148 /* SWXMLHash.framework */; };
		OBJ_373 /* Yaml.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_149 /* Yaml.framework */; };
		OBJ_374 /* LicensePlistCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_151 /* LicensePlistCore.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		FEEA37161EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_153;
			remoteInfo = Spectre;
		};
		FEEA37171EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_201;
			remoteInfo = Result;
		};
		FEEA37181EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_239;
			remoteInfo = LoggerAPI;
		};
		FEEA37191EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_153;
			remoteInfo = Spectre;
		};
		FEEA371A1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_167;
			remoteInfo = Commander;
		};
		FEEA371B1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_184;
			remoteInfo = Himotoki;
		};
		FEEA371C1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_201;
			remoteInfo = Result;
		};
		FEEA371D1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_209;
			remoteInfo = APIKit;
		};
		FEEA371E1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_239;
			remoteInfo = LoggerAPI;
		};
		FEEA371F1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_246;
			remoteInfo = HeliumLogger;
		};
		FEEA37201EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_256;
			remoteInfo = SWXMLHash;
		};
		FEEA37211EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_264;
			remoteInfo = Yaml;
		};
		FEEA37221EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_303;
			remoteInfo = LicensePlistCore;
		};
		FEEA37231EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_153;
			remoteInfo = Spectre;
		};
		FEEA37241EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_167;
			remoteInfo = Commander;
		};
		FEEA37251EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_184;
			remoteInfo = Himotoki;
		};
		FEEA37261EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_201;
			remoteInfo = Result;
		};
		FEEA37271EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_209;
			remoteInfo = APIKit;
		};
		FEEA37281EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_239;
			remoteInfo = LoggerAPI;
		};
		FEEA37291EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_246;
			remoteInfo = HeliumLogger;
		};
		FEEA372A1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_256;
			remoteInfo = SWXMLHash;
		};
		FEEA372B1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_264;
			remoteInfo = Yaml;
		};
		FEEA372C1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_153;
			remoteInfo = Spectre;
		};
		FEEA372D1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_167;
			remoteInfo = Commander;
		};
		FEEA372E1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_184;
			remoteInfo = Himotoki;
		};
		FEEA372F1EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_201;
			remoteInfo = Result;
		};
		FEEA37301EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_209;
			remoteInfo = APIKit;
		};
		FEEA37311EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_239;
			remoteInfo = LoggerAPI;
		};
		FEEA37321EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_246;
			remoteInfo = HeliumLogger;
		};
		FEEA37331EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_256;
			remoteInfo = SWXMLHash;
		};
		FEEA37341EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_264;
			remoteInfo = Yaml;
		};
		FEEA37351EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_303;
			remoteInfo = LicensePlistCore;
		};
		FEEA37361EBB4FEF003A1413 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_276;
			remoteInfo = LicensePlist;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		OBJ_101 /* URLEncodedSerialization.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = URLEncodedSerialization.swift; sourceTree = "<group>"; };
		OBJ_103 /* SessionAdapter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SessionAdapter.swift; sourceTree = "<group>"; };
		OBJ_104 /* URLSessionAdapter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = URLSessionAdapter.swift; sourceTree = "<group>"; };
		OBJ_107 /* Result.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Result.swift; sourceTree = "<group>"; };
		OBJ_108 /* ResultProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ResultProtocol.swift; sourceTree = "<group>"; };
		OBJ_11 /* ConfigLoader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConfigLoader.swift; sourceTree = "<group>"; };
		OBJ_110 /* Casting.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Casting.swift; sourceTree = "<group>"; };
		OBJ_111 /* Decodable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Decodable.swift; sourceTree = "<group>"; };
		OBJ_112 /* decode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = decode.swift; sourceTree = "<group>"; };
		OBJ_113 /* DecodeError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DecodeError.swift; sourceTree = "<group>"; };
		OBJ_114 /* Extractor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Extractor.swift; sourceTree = "<group>"; };
		OBJ_115 /* KeyPath.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyPath.swift; sourceTree = "<group>"; };
		OBJ_116 /* NSNumber.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NSNumber.swift; sourceTree = "<group>"; };
		OBJ_117 /* Operators.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Operators.swift; sourceTree = "<group>"; };
		OBJ_118 /* RawRepresentable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RawRepresentable.swift; sourceTree = "<group>"; };
		OBJ_119 /* StandardLib.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StandardLib.swift; sourceTree = "<group>"; };
		OBJ_12 /* Consts.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Consts.swift; sourceTree = "<group>"; };
		OBJ_120 /* Transformer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Transformer.swift; sourceTree = "<group>"; };
		OBJ_122 /* ArgumentConvertible.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArgumentConvertible.swift; sourceTree = "<group>"; };
		OBJ_123 /* ArgumentDescription.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArgumentDescription.swift; sourceTree = "<group>"; };
		OBJ_124 /* ArgumentParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArgumentParser.swift; sourceTree = "<group>"; };
		OBJ_125 /* Command.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Command.swift; sourceTree = "<group>"; };
		OBJ_126 /* CommandRunner.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CommandRunner.swift; sourceTree = "<group>"; };
		OBJ_127 /* Commands.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Commands.swift; sourceTree = "<group>"; };
		OBJ_128 /* CommandType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CommandType.swift; sourceTree = "<group>"; };
		OBJ_129 /* Error.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Error.swift; sourceTree = "<group>"; };
		OBJ_13 /* LicensePlist.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LicensePlist.swift; sourceTree = "<group>"; };
		OBJ_130 /* Group.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Group.swift; sourceTree = "<group>"; };
		OBJ_132 /* Case.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Case.swift; sourceTree = "<group>"; };
		OBJ_133 /* Context.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Context.swift; sourceTree = "<group>"; };
		OBJ_134 /* Expectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expectation.swift; sourceTree = "<group>"; };
		OBJ_135 /* Failure.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Failure.swift; sourceTree = "<group>"; };
		OBJ_136 /* Global.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Global.swift; sourceTree = "<group>"; };
		OBJ_137 /* GlobalContext.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GlobalContext.swift; sourceTree = "<group>"; };
		OBJ_138 /* Reporter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Reporter.swift; sourceTree = "<group>"; };
		OBJ_139 /* Reporters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Reporters.swift; sourceTree = "<group>"; };
		OBJ_14 /* Logger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Logger.swift; sourceTree = "<group>"; };
		OBJ_141 /* Spectre.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Spectre.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_142 /* Commander.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Commander.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_143 /* Himotoki.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Himotoki.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_144 /* Result.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Result.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_145 /* APIKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = APIKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_146 /* LoggerAPI.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = LoggerAPI.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_147 /* HeliumLogger.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = HeliumLogger.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_148 /* SWXMLHash.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = SWXMLHash.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_149 /* Yaml.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Yaml.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_15 /* ResultOperation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ResultOperation.swift; sourceTree = "<group>"; };
		OBJ_150 /* LicensePlist */ = {isa = PBXFileReference; lastKnownFileType = text; path = LicensePlist; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_151 /* LicensePlistCore.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = LicensePlistCore.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_152 /* LicensePlistTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = LicensePlistTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_16 /* Shell.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Shell.swift; sourceTree = "<group>"; };
		OBJ_17 /* TemplateManager.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TemplateManager.swift; sourceTree = "<group>"; };
		OBJ_19 /* Collector.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Collector.swift; sourceTree = "<group>"; };
		OBJ_20 /* GitHubLicense.collector.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GitHubLicense.collector.swift; sourceTree = "<group>"; };
		OBJ_22 /* CocoaPods.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CocoaPods.swift; sourceTree = "<group>"; };
		OBJ_23 /* Config.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Config.swift; sourceTree = "<group>"; };
		OBJ_24 /* GitHub.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GitHub.swift; sourceTree = "<group>"; };
		OBJ_25 /* Library.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Library.swift; sourceTree = "<group>"; };
		OBJ_26 /* License.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = License.swift; sourceTree = "<group>"; };
		OBJ_28 /* APIKit.extension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = APIKit.extension.swift; sourceTree = "<group>"; };
		OBJ_29 /* Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Extensions.swift; sourceTree = "<group>"; };
		OBJ_30 /* URL.extension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = URL.extension.swift; sourceTree = "<group>"; };
		OBJ_32 /* GitHubRequest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GitHubRequest.swift; sourceTree = "<group>"; };
		OBJ_33 /* RepoRequests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RepoRequests.swift; sourceTree = "<group>"; };
		OBJ_34 /* SearchRequests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchRequests.swift; sourceTree = "<group>"; };
		OBJ_36 /* CocoaPods.parser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CocoaPods.parser.swift; sourceTree = "<group>"; };
		OBJ_37 /* GitHub.parser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GitHub.parser.swift; sourceTree = "<group>"; };
		OBJ_38 /* Parser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Parser.swift; sourceTree = "<group>"; };
		OBJ_41 /* ConfigLoaderTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConfigLoaderTests.swift; sourceTree = "<group>"; };
		OBJ_42 /* GtiHubClientTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GtiHubClientTests.swift; sourceTree = "<group>"; };
		OBJ_43 /* ResultOperationTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ResultOperationTests.swift; sourceTree = "<group>"; };
		OBJ_44 /* TemplateManagerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TemplateManagerTests.swift; sourceTree = "<group>"; };
		OBJ_45 /* TestUtil.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TestUtil.swift; sourceTree = "<group>"; };
		OBJ_46 /* URL.extensionTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = URL.extensionTests.swift; sourceTree = "<group>"; };
		OBJ_48 /* GitHubLicense.collectorTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GitHubLicense.collectorTests.swift; sourceTree = "<group>"; };
		OBJ_50 /* CocoaPodsLicense.parserTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CocoaPodsLicense.parserTests.swift; sourceTree = "<group>"; };
		OBJ_51 /* GitHub.parserTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GitHub.parserTests.swift; sourceTree = "<group>"; };
		OBJ_52 /* com.mono0926.LicensePlist.Output */ = {isa = PBXFileReference; lastKnownFileType = folder; path = com.mono0926.LicensePlist.Output; sourceTree = SOURCE_ROOT; };
		OBJ_53 /* Pods */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Pods; sourceTree = SOURCE_ROOT; };
		OBJ_54 /* Screenshots */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Screenshots; sourceTree = SOURCE_ROOT; };
		OBJ_55 /* Settings.bundle */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.plug-in"; path = Settings.bundle; sourceTree = SOURCE_ROOT; };
		OBJ_56 /* Template */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Template; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* Yaml.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Yaml.swift; sourceTree = "<group>"; };
		OBJ_61 /* YAMLOperators.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = YAMLOperators.swift; sourceTree = "<group>"; };
		OBJ_62 /* YAMLParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = YAMLParser.swift; sourceTree = "<group>"; };
		OBJ_63 /* YAMLRegex.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = YAMLRegex.swift; sourceTree = "<group>"; };
		OBJ_64 /* YAMLResult.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = YAMLResult.swift; sourceTree = "<group>"; };
		OBJ_65 /* YAMLTokenizer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = YAMLTokenizer.swift; sourceTree = "<group>"; };
		OBJ_67 /* SWXMLHash+TypeConversion.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SWXMLHash+TypeConversion.swift"; sourceTree = "<group>"; };
		OBJ_68 /* SWXMLHash.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SWXMLHash.swift; sourceTree = "<group>"; };
		OBJ_71 /* HeliumLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeliumLogger.swift; sourceTree = "<group>"; };
		OBJ_72 /* HeliumStreamLogger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeliumStreamLogger.swift; sourceTree = "<group>"; };
		OBJ_75 /* Logger.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Logger.swift; sourceTree = "<group>"; };
		OBJ_78 /* CallbackQueue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CallbackQueue.swift; sourceTree = "<group>"; };
		OBJ_79 /* HTTPMethod.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HTTPMethod.swift; sourceTree = "<group>"; };
		OBJ_80 /* Request.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Request.swift; sourceTree = "<group>"; };
		OBJ_81 /* Session.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Session.swift; sourceTree = "<group>"; };
		OBJ_82 /* Unavailable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Unavailable.swift; sourceTree = "<group>"; };
		OBJ_84 /* BodyParameters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BodyParameters.swift; sourceTree = "<group>"; };
		OBJ_85 /* Data+InputStream.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Data+InputStream.swift"; sourceTree = "<group>"; };
		OBJ_86 /* FormURLEncodedBodyParameters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FormURLEncodedBodyParameters.swift; sourceTree = "<group>"; };
		OBJ_87 /* JSONBodyParameters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSONBodyParameters.swift; sourceTree = "<group>"; };
		OBJ_88 /* MultipartFormDataBodyParameters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MultipartFormDataBodyParameters.swift; sourceTree = "<group>"; };
		OBJ_89 /* ProtobufBodyParameters.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ProtobufBodyParameters.swift; sourceTree = "<group>"; };
		OBJ_9 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		OBJ_91 /* DataParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DataParser.swift; sourceTree = "<group>"; };
		OBJ_92 /* FormURLEncodedDataParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FormURLEncodedDataParser.swift; sourceTree = "<group>"; };
		OBJ_93 /* JSONDataParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JSONDataParser.swift; sourceTree = "<group>"; };
		OBJ_94 /* ProtobufDataParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ProtobufDataParser.swift; sourceTree = "<group>"; };
		OBJ_95 /* StringDataParser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringDataParser.swift; sourceTree = "<group>"; };
		OBJ_97 /* RequestError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RequestError.swift; sourceTree = "<group>"; };
		OBJ_98 /* ResponseError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ResponseError.swift; sourceTree = "<group>"; };
		OBJ_99 /* SessionTaskError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SessionTaskError.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_166 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_181 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_182 /* Spectre.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_200 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_208 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_236 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_237 /* Result.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_245 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_253 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_254 /* LoggerAPI.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_263 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_275 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_282 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_283 /* Spectre.framework in Frameworks */,
				OBJ_284 /* Commander.framework in Frameworks */,
				OBJ_285 /* Himotoki.framework in Frameworks */,
				OBJ_286 /* Result.framework in Frameworks */,
				OBJ_287 /* APIKit.framework in Frameworks */,
				OBJ_288 /* LoggerAPI.framework in Frameworks */,
				OBJ_289 /* HeliumLogger.framework in Frameworks */,
				OBJ_290 /* SWXMLHash.framework in Frameworks */,
				OBJ_291 /* Yaml.framework in Frameworks */,
				OBJ_292 /* LicensePlistCore.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_331 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_332 /* Spectre.framework in Frameworks */,
				OBJ_333 /* Commander.framework in Frameworks */,
				OBJ_334 /* Himotoki.framework in Frameworks */,
				OBJ_335 /* Result.framework in Frameworks */,
				OBJ_336 /* APIKit.framework in Frameworks */,
				OBJ_337 /* LoggerAPI.framework in Frameworks */,
				OBJ_338 /* HeliumLogger.framework in Frameworks */,
				OBJ_339 /* SWXMLHash.framework in Frameworks */,
				OBJ_340 /* Yaml.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_364 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_365 /* Spectre.framework in Frameworks */,
				OBJ_366 /* Commander.framework in Frameworks */,
				OBJ_367 /* Himotoki.framework in Frameworks */,
				OBJ_368 /* Result.framework in Frameworks */,
				OBJ_369 /* APIKit.framework in Frameworks */,
				OBJ_370 /* LoggerAPI.framework in Frameworks */,
				OBJ_371 /* HeliumLogger.framework in Frameworks */,
				OBJ_372 /* SWXMLHash.framework in Frameworks */,
				OBJ_373 /* Yaml.framework in Frameworks */,
				OBJ_374 /* LicensePlistCore.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_10 /* LicensePlistCore */ = {
			isa = PBXGroup;
			children = (
				OBJ_11 /* ConfigLoader.swift */,
				OBJ_12 /* Consts.swift */,
				OBJ_13 /* LicensePlist.swift */,
				OBJ_14 /* Logger.swift */,
				OBJ_15 /* ResultOperation.swift */,
				OBJ_16 /* Shell.swift */,
				OBJ_17 /* TemplateManager.swift */,
				OBJ_18 /* Collector */,
				OBJ_21 /* Entity */,
				OBJ_27 /* Extension */,
				OBJ_31 /* GitHubClient */,
				OBJ_35 /* Parser */,
			);
			name = LicensePlistCore;
			path = Sources/LicensePlistCore;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_100 /* Serializations */ = {
			isa = PBXGroup;
			children = (
				OBJ_101 /* URLEncodedSerialization.swift */,
			);
			path = Serializations;
			sourceTree = "<group>";
		};
		OBJ_102 /* SessionAdapter */ = {
			isa = PBXGroup;
			children = (
				OBJ_103 /* SessionAdapter.swift */,
				OBJ_104 /* URLSessionAdapter.swift */,
			);
			path = SessionAdapter;
			sourceTree = "<group>";
		};
		OBJ_105 /* Result 3.2.1 */ = {
			isa = PBXGroup;
			children = (
				OBJ_106 /* Result */,
			);
			name = "Result 3.2.1";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_106 /* Result */ = {
			isa = PBXGroup;
			children = (
				OBJ_107 /* Result.swift */,
				OBJ_108 /* ResultProtocol.swift */,
			);
			name = Result;
			path = ".build/checkouts/Result.git-8684547452332391156/Result";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_109 /* Himotoki 3.0.1 */ = {
			isa = PBXGroup;
			children = (
				OBJ_110 /* Casting.swift */,
				OBJ_111 /* Decodable.swift */,
				OBJ_112 /* decode.swift */,
				OBJ_113 /* DecodeError.swift */,
				OBJ_114 /* Extractor.swift */,
				OBJ_115 /* KeyPath.swift */,
				OBJ_116 /* NSNumber.swift */,
				OBJ_117 /* Operators.swift */,
				OBJ_118 /* RawRepresentable.swift */,
				OBJ_119 /* StandardLib.swift */,
				OBJ_120 /* Transformer.swift */,
			);
			name = "Himotoki 3.0.1";
			path = ".build/checkouts/Himotoki.git-9171745471410878028/Sources";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_121 /* Commander 0.6.1 */ = {
			isa = PBXGroup;
			children = (
				OBJ_122 /* ArgumentConvertible.swift */,
				OBJ_123 /* ArgumentDescription.swift */,
				OBJ_124 /* ArgumentParser.swift */,
				OBJ_125 /* Command.swift */,
				OBJ_126 /* CommandRunner.swift */,
				OBJ_127 /* Commands.swift */,
				OBJ_128 /* CommandType.swift */,
				OBJ_129 /* Error.swift */,
				OBJ_130 /* Group.swift */,
			);
			name = "Commander 0.6.1";
			path = ".build/checkouts/Commander.git-1040763989236346507/Sources";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_131 /* Spectre 0.7.2 */ = {
			isa = PBXGroup;
			children = (
				OBJ_132 /* Case.swift */,
				OBJ_133 /* Context.swift */,
				OBJ_134 /* Expectation.swift */,
				OBJ_135 /* Failure.swift */,
				OBJ_136 /* Global.swift */,
				OBJ_137 /* GlobalContext.swift */,
				OBJ_138 /* Reporter.swift */,
				OBJ_139 /* Reporters.swift */,
			);
			name = "Spectre 0.7.2";
			path = ".build/checkouts/Spectre.git--7655155069707042687/Sources";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_140 /* Products */ = {
			isa = PBXGroup;
			children = (
				OBJ_141 /* Spectre.framework */,
				OBJ_142 /* Commander.framework */,
				OBJ_143 /* Himotoki.framework */,
				OBJ_144 /* Result.framework */,
				OBJ_145 /* APIKit.framework */,
				OBJ_146 /* LoggerAPI.framework */,
				OBJ_147 /* HeliumLogger.framework */,
				OBJ_148 /* SWXMLHash.framework */,
				OBJ_149 /* Yaml.framework */,
				OBJ_150 /* LicensePlist */,
				OBJ_151 /* LicensePlistCore.framework */,
				OBJ_152 /* LicensePlistTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_18 /* Collector */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* Collector.swift */,
				OBJ_20 /* GitHubLicense.collector.swift */,
			);
			path = Collector;
			sourceTree = "<group>";
		};
		OBJ_21 /* Entity */ = {
			isa = PBXGroup;
			children = (
				OBJ_22 /* CocoaPods.swift */,
				OBJ_23 /* Config.swift */,
				OBJ_24 /* GitHub.swift */,
				OBJ_25 /* Library.swift */,
				OBJ_26 /* License.swift */,
			);
			path = Entity;
			sourceTree = "<group>";
		};
		OBJ_27 /* Extension */ = {
			isa = PBXGroup;
			children = (
				OBJ_28 /* APIKit.extension.swift */,
				OBJ_29 /* Extensions.swift */,
				OBJ_30 /* URL.extension.swift */,
			);
			path = Extension;
			sourceTree = "<group>";
		};
		OBJ_31 /* GitHubClient */ = {
			isa = PBXGroup;
			children = (
				OBJ_32 /* GitHubRequest.swift */,
				OBJ_33 /* RepoRequests.swift */,
				OBJ_34 /* SearchRequests.swift */,
			);
			path = GitHubClient;
			sourceTree = "<group>";
		};
		OBJ_35 /* Parser */ = {
			isa = PBXGroup;
			children = (
				OBJ_36 /* CocoaPods.parser.swift */,
				OBJ_37 /* GitHub.parser.swift */,
				OBJ_38 /* Parser.swift */,
			);
			path = Parser;
			sourceTree = "<group>";
		};
		OBJ_39 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_40 /* LicensePlistTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_40 /* LicensePlistTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_41 /* ConfigLoaderTests.swift */,
				OBJ_42 /* GtiHubClientTests.swift */,
				OBJ_43 /* ResultOperationTests.swift */,
				OBJ_44 /* TemplateManagerTests.swift */,
				OBJ_45 /* TestUtil.swift */,
				OBJ_46 /* URL.extensionTests.swift */,
				OBJ_47 /* Collector */,
				OBJ_49 /* Parser */,
			);
			name = LicensePlistTests;
			path = Tests/LicensePlistTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_47 /* Collector */ = {
			isa = PBXGroup;
			children = (
				OBJ_48 /* GitHubLicense.collectorTests.swift */,
			);
			path = Collector;
			sourceTree = "<group>";
		};
		OBJ_49 /* Parser */ = {
			isa = PBXGroup;
			children = (
				OBJ_50 /* CocoaPodsLicense.parserTests.swift */,
				OBJ_51 /* GitHub.parserTests.swift */,
			);
			path = Parser;
			sourceTree = "<group>";
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_39 /* Tests */,
				OBJ_52 /* com.mono0926.LicensePlist.Output */,
				OBJ_53 /* Pods */,
				OBJ_54 /* Screenshots */,
				OBJ_55 /* Settings.bundle */,
				OBJ_56 /* Template */,
				OBJ_57 /* Dependencies */,
				OBJ_140 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_57 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_58 /* Yaml 3.4.0 */,
				OBJ_66 /* SWXMLHash 3.0.4 */,
				OBJ_69 /* HeliumLogger 1.7.0 */,
				OBJ_73 /* LoggerAPI 1.7.0 */,
				OBJ_76 /* APIKit 3.1.2 */,
				OBJ_105 /* Result 3.2.1 */,
				OBJ_109 /* Himotoki 3.0.1 */,
				OBJ_121 /* Commander 0.6.1 */,
				OBJ_131 /* Spectre 0.7.2 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_58 /* Yaml 3.4.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_59 /* Yaml */,
			);
			name = "Yaml 3.4.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_59 /* Yaml */ = {
			isa = PBXGroup;
			children = (
				OBJ_60 /* Yaml.swift */,
				OBJ_61 /* YAMLOperators.swift */,
				OBJ_62 /* YAMLParser.swift */,
				OBJ_63 /* YAMLRegex.swift */,
				OBJ_64 /* YAMLResult.swift */,
				OBJ_65 /* YAMLTokenizer.swift */,
			);
			name = Yaml;
			path = ".build/checkouts/YamlSwift.git--3159976709968518229/Sources/Yaml";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_66 /* SWXMLHash 3.0.4 */ = {
			isa = PBXGroup;
			children = (
				OBJ_67 /* SWXMLHash+TypeConversion.swift */,
				OBJ_68 /* SWXMLHash.swift */,
			);
			name = "SWXMLHash 3.0.4";
			path = ".build/checkouts/SWXMLHash.git--4447522225536909962/Source";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_69 /* HeliumLogger 1.7.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_70 /* HeliumLogger */,
			);
			name = "HeliumLogger 1.7.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* LicensePlist */,
				OBJ_10 /* LicensePlistCore */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_70 /* HeliumLogger */ = {
			isa = PBXGroup;
			children = (
				OBJ_71 /* HeliumLogger.swift */,
				OBJ_72 /* HeliumStreamLogger.swift */,
			);
			name = HeliumLogger;
			path = ".build/checkouts/HeliumLogger.git--751651610598965649/Sources/HeliumLogger";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_73 /* LoggerAPI 1.7.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_74 /* LoggerAPI */,
			);
			name = "LoggerAPI 1.7.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_74 /* LoggerAPI */ = {
			isa = PBXGroup;
			children = (
				OBJ_75 /* Logger.swift */,
			);
			name = LoggerAPI;
			path = ".build/checkouts/LoggerAPI.git--6449715459278086880/Sources/LoggerAPI";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_76 /* APIKit 3.1.2 */ = {
			isa = PBXGroup;
			children = (
				OBJ_77 /* APIKit */,
			);
			name = "APIKit 3.1.2";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_77 /* APIKit */ = {
			isa = PBXGroup;
			children = (
				OBJ_78 /* CallbackQueue.swift */,
				OBJ_79 /* HTTPMethod.swift */,
				OBJ_80 /* Request.swift */,
				OBJ_81 /* Session.swift */,
				OBJ_82 /* Unavailable.swift */,
				OBJ_83 /* BodyParameters */,
				OBJ_90 /* DataParser */,
				OBJ_96 /* Error */,
				OBJ_100 /* Serializations */,
				OBJ_102 /* SessionAdapter */,
			);
			name = APIKit;
			path = ".build/checkouts/APIKit.git--5867995916541647569/Sources/APIKit";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* LicensePlist */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* main.swift */,
			);
			name = LicensePlist;
			path = Sources/LicensePlist;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_83 /* BodyParameters */ = {
			isa = PBXGroup;
			children = (
				OBJ_84 /* BodyParameters.swift */,
				OBJ_85 /* Data+InputStream.swift */,
				OBJ_86 /* FormURLEncodedBodyParameters.swift */,
				OBJ_87 /* JSONBodyParameters.swift */,
				OBJ_88 /* MultipartFormDataBodyParameters.swift */,
				OBJ_89 /* ProtobufBodyParameters.swift */,
			);
			path = BodyParameters;
			sourceTree = "<group>";
		};
		OBJ_90 /* DataParser */ = {
			isa = PBXGroup;
			children = (
				OBJ_91 /* DataParser.swift */,
				OBJ_92 /* FormURLEncodedDataParser.swift */,
				OBJ_93 /* JSONDataParser.swift */,
				OBJ_94 /* ProtobufDataParser.swift */,
				OBJ_95 /* StringDataParser.swift */,
			);
			path = DataParser;
			sourceTree = "<group>";
		};
		OBJ_96 /* Error */ = {
			isa = PBXGroup;
			children = (
				OBJ_97 /* RequestError.swift */,
				OBJ_98 /* ResponseError.swift */,
				OBJ_99 /* SessionTaskError.swift */,
			);
			path = Error;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		OBJ_153 /* Spectre */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_154 /* Build configuration list for PBXNativeTarget "Spectre" */;
			buildPhases = (
				OBJ_157 /* Sources */,
				OBJ_166 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Spectre;
			productName = Spectre;
			productReference = OBJ_141 /* Spectre.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_167 /* Commander */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_168 /* Build configuration list for PBXNativeTarget "Commander" */;
			buildPhases = (
				OBJ_171 /* Sources */,
				OBJ_181 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_183 /* PBXTargetDependency */,
			);
			name = Commander;
			productName = Commander;
			productReference = OBJ_142 /* Commander.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_184 /* Himotoki */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_185 /* Build configuration list for PBXNativeTarget "Himotoki" */;
			buildPhases = (
				OBJ_188 /* Sources */,
				OBJ_200 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Himotoki;
			productName = Himotoki;
			productReference = OBJ_143 /* Himotoki.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_201 /* Result */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_202 /* Build configuration list for PBXNativeTarget "Result" */;
			buildPhases = (
				OBJ_205 /* Sources */,
				OBJ_208 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Result;
			productName = Result;
			productReference = OBJ_144 /* Result.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_209 /* APIKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_210 /* Build configuration list for PBXNativeTarget "APIKit" */;
			buildPhases = (
				OBJ_213 /* Sources */,
				OBJ_236 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_238 /* PBXTargetDependency */,
			);
			name = APIKit;
			productName = APIKit;
			productReference = OBJ_145 /* APIKit.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_239 /* LoggerAPI */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_240 /* Build configuration list for PBXNativeTarget "LoggerAPI" */;
			buildPhases = (
				OBJ_243 /* Sources */,
				OBJ_245 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LoggerAPI;
			productName = LoggerAPI;
			productReference = OBJ_146 /* LoggerAPI.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_246 /* HeliumLogger */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_247 /* Build configuration list for PBXNativeTarget "HeliumLogger" */;
			buildPhases = (
				OBJ_250 /* Sources */,
				OBJ_253 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_255 /* PBXTargetDependency */,
			);
			name = HeliumLogger;
			productName = HeliumLogger;
			productReference = OBJ_147 /* HeliumLogger.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_256 /* SWXMLHash */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_257 /* Build configuration list for PBXNativeTarget "SWXMLHash" */;
			buildPhases = (
				OBJ_260 /* Sources */,
				OBJ_263 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SWXMLHash;
			productName = SWXMLHash;
			productReference = OBJ_148 /* SWXMLHash.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_264 /* Yaml */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_265 /* Build configuration list for PBXNativeTarget "Yaml" */;
			buildPhases = (
				OBJ_268 /* Sources */,
				OBJ_275 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Yaml;
			productName = Yaml;
			productReference = OBJ_149 /* Yaml.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_276 /* LicensePlist */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_277 /* Build configuration list for PBXNativeTarget "LicensePlist" */;
			buildPhases = (
				OBJ_280 /* Sources */,
				OBJ_282 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_293 /* PBXTargetDependency */,
				OBJ_294 /* PBXTargetDependency */,
				OBJ_295 /* PBXTargetDependency */,
				OBJ_296 /* PBXTargetDependency */,
				OBJ_297 /* PBXTargetDependency */,
				OBJ_298 /* PBXTargetDependency */,
				OBJ_299 /* PBXTargetDependency */,
				OBJ_300 /* PBXTargetDependency */,
				OBJ_301 /* PBXTargetDependency */,
				OBJ_302 /* PBXTargetDependency */,
			);
			name = LicensePlist;
			productName = LicensePlist;
			productReference = OBJ_150 /* LicensePlist */;
			productType = "com.apple.product-type.tool";
		};
		OBJ_303 /* LicensePlistCore */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_304 /* Build configuration list for PBXNativeTarget "LicensePlistCore" */;
			buildPhases = (
				OBJ_307 /* Sources */,
				OBJ_331 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_341 /* PBXTargetDependency */,
				OBJ_342 /* PBXTargetDependency */,
				OBJ_343 /* PBXTargetDependency */,
				OBJ_344 /* PBXTargetDependency */,
				OBJ_345 /* PBXTargetDependency */,
				OBJ_346 /* PBXTargetDependency */,
				OBJ_347 /* PBXTargetDependency */,
				OBJ_348 /* PBXTargetDependency */,
				OBJ_349 /* PBXTargetDependency */,
			);
			name = LicensePlistCore;
			productName = LicensePlistCore;
			productReference = OBJ_151 /* LicensePlistCore.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_350 /* LicensePlistTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_351 /* Build configuration list for PBXNativeTarget "LicensePlistTests" */;
			buildPhases = (
				OBJ_354 /* Sources */,
				OBJ_364 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_375 /* PBXTargetDependency */,
				OBJ_376 /* PBXTargetDependency */,
				OBJ_377 /* PBXTargetDependency */,
				OBJ_378 /* PBXTargetDependency */,
				OBJ_379 /* PBXTargetDependency */,
				OBJ_380 /* PBXTargetDependency */,
				OBJ_381 /* PBXTargetDependency */,
				OBJ_382 /* PBXTargetDependency */,
				OBJ_383 /* PBXTargetDependency */,
				OBJ_384 /* PBXTargetDependency */,
				OBJ_385 /* PBXTargetDependency */,
			);
			name = LicensePlistTests;
			productName = LicensePlistTests;
			productReference = OBJ_152 /* LicensePlistTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "LicensePlist" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_140 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				OBJ_153 /* Spectre */,
				OBJ_167 /* Commander */,
				OBJ_184 /* Himotoki */,
				OBJ_201 /* Result */,
				OBJ_209 /* APIKit */,
				OBJ_239 /* LoggerAPI */,
				OBJ_246 /* HeliumLogger */,
				OBJ_256 /* SWXMLHash */,
				OBJ_264 /* Yaml */,
				OBJ_276 /* LicensePlist */,
				OBJ_303 /* LicensePlistCore */,
				OBJ_350 /* LicensePlistTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_157 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_158 /* Case.swift in Sources */,
				OBJ_159 /* Context.swift in Sources */,
				OBJ_160 /* Expectation.swift in Sources */,
				OBJ_161 /* Failure.swift in Sources */,
				OBJ_162 /* Global.swift in Sources */,
				OBJ_163 /* GlobalContext.swift in Sources */,
				OBJ_164 /* Reporter.swift in Sources */,
				OBJ_165 /* Reporters.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_171 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_172 /* ArgumentConvertible.swift in Sources */,
				OBJ_173 /* ArgumentDescription.swift in Sources */,
				OBJ_174 /* ArgumentParser.swift in Sources */,
				OBJ_175 /* Command.swift in Sources */,
				OBJ_176 /* CommandRunner.swift in Sources */,
				OBJ_177 /* Commands.swift in Sources */,
				OBJ_178 /* CommandType.swift in Sources */,
				OBJ_179 /* Error.swift in Sources */,
				OBJ_180 /* Group.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_188 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_189 /* Casting.swift in Sources */,
				OBJ_190 /* Decodable.swift in Sources */,
				OBJ_191 /* decode.swift in Sources */,
				OBJ_192 /* DecodeError.swift in Sources */,
				OBJ_193 /* Extractor.swift in Sources */,
				OBJ_194 /* KeyPath.swift in Sources */,
				OBJ_195 /* NSNumber.swift in Sources */,
				OBJ_196 /* Operators.swift in Sources */,
				OBJ_197 /* RawRepresentable.swift in Sources */,
				OBJ_198 /* StandardLib.swift in Sources */,
				OBJ_199 /* Transformer.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_205 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_206 /* Result.swift in Sources */,
				OBJ_207 /* ResultProtocol.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_213 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_214 /* CallbackQueue.swift in Sources */,
				OBJ_215 /* HTTPMethod.swift in Sources */,
				OBJ_216 /* Request.swift in Sources */,
				OBJ_217 /* Session.swift in Sources */,
				OBJ_218 /* Unavailable.swift in Sources */,
				OBJ_219 /* BodyParameters.swift in Sources */,
				OBJ_220 /* Data+InputStream.swift in Sources */,
				OBJ_221 /* FormURLEncodedBodyParameters.swift in Sources */,
				OBJ_222 /* JSONBodyParameters.swift in Sources */,
				OBJ_223 /* MultipartFormDataBodyParameters.swift in Sources */,
				OBJ_224 /* ProtobufBodyParameters.swift in Sources */,
				OBJ_225 /* DataParser.swift in Sources */,
				OBJ_226 /* FormURLEncodedDataParser.swift in Sources */,
				OBJ_227 /* JSONDataParser.swift in Sources */,
				OBJ_228 /* ProtobufDataParser.swift in Sources */,
				OBJ_229 /* StringDataParser.swift in Sources */,
				OBJ_230 /* RequestError.swift in Sources */,
				OBJ_231 /* ResponseError.swift in Sources */,
				OBJ_232 /* SessionTaskError.swift in Sources */,
				OBJ_233 /* URLEncodedSerialization.swift in Sources */,
				OBJ_234 /* SessionAdapter.swift in Sources */,
				OBJ_235 /* URLSessionAdapter.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_243 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_244 /* Logger.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_250 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_251 /* HeliumLogger.swift in Sources */,
				OBJ_252 /* HeliumStreamLogger.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_260 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_261 /* SWXMLHash+TypeConversion.swift in Sources */,
				OBJ_262 /* SWXMLHash.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_268 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_269 /* Yaml.swift in Sources */,
				OBJ_270 /* YAMLOperators.swift in Sources */,
				OBJ_271 /* YAMLParser.swift in Sources */,
				OBJ_272 /* YAMLRegex.swift in Sources */,
				OBJ_273 /* YAMLResult.swift in Sources */,
				OBJ_274 /* YAMLTokenizer.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_280 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_281 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_307 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_308 /* ConfigLoader.swift in Sources */,
				OBJ_309 /* Consts.swift in Sources */,
				OBJ_310 /* LicensePlist.swift in Sources */,
				OBJ_311 /* Logger.swift in Sources */,
				OBJ_312 /* ResultOperation.swift in Sources */,
				OBJ_313 /* Shell.swift in Sources */,
				OBJ_314 /* TemplateManager.swift in Sources */,
				OBJ_315 /* Collector.swift in Sources */,
				OBJ_316 /* GitHubLicense.collector.swift in Sources */,
				OBJ_317 /* CocoaPods.swift in Sources */,
				OBJ_318 /* Config.swift in Sources */,
				OBJ_319 /* GitHub.swift in Sources */,
				OBJ_320 /* Library.swift in Sources */,
				OBJ_321 /* License.swift in Sources */,
				OBJ_322 /* APIKit.extension.swift in Sources */,
				OBJ_323 /* Extensions.swift in Sources */,
				OBJ_324 /* URL.extension.swift in Sources */,
				OBJ_325 /* GitHubRequest.swift in Sources */,
				OBJ_326 /* RepoRequests.swift in Sources */,
				OBJ_327 /* SearchRequests.swift in Sources */,
				OBJ_328 /* CocoaPods.parser.swift in Sources */,
				OBJ_329 /* GitHub.parser.swift in Sources */,
				OBJ_330 /* Parser.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_354 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_355 /* ConfigLoaderTests.swift in Sources */,
				OBJ_356 /* GtiHubClientTests.swift in Sources */,
				OBJ_357 /* ResultOperationTests.swift in Sources */,
				OBJ_358 /* TemplateManagerTests.swift in Sources */,
				OBJ_359 /* TestUtil.swift in Sources */,
				OBJ_360 /* URL.extensionTests.swift in Sources */,
				OBJ_361 /* GitHubLicense.collectorTests.swift in Sources */,
				OBJ_362 /* CocoaPodsLicense.parserTests.swift in Sources */,
				OBJ_363 /* GitHub.parserTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_183 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_153 /* Spectre */;
			targetProxy = FEEA37161EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_238 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_201 /* Result */;
			targetProxy = FEEA37171EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_255 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_239 /* LoggerAPI */;
			targetProxy = FEEA37181EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_293 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_153 /* Spectre */;
			targetProxy = FEEA37191EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_294 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_167 /* Commander */;
			targetProxy = FEEA371A1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_295 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_184 /* Himotoki */;
			targetProxy = FEEA371B1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_296 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_201 /* Result */;
			targetProxy = FEEA371C1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_297 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_209 /* APIKit */;
			targetProxy = FEEA371D1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_298 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_239 /* LoggerAPI */;
			targetProxy = FEEA371E1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_299 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_246 /* HeliumLogger */;
			targetProxy = FEEA371F1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_300 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_256 /* SWXMLHash */;
			targetProxy = FEEA37201EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_301 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_264 /* Yaml */;
			targetProxy = FEEA37211EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_302 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_303 /* LicensePlistCore */;
			targetProxy = FEEA37221EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_341 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_153 /* Spectre */;
			targetProxy = FEEA37231EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_342 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_167 /* Commander */;
			targetProxy = FEEA37241EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_343 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_184 /* Himotoki */;
			targetProxy = FEEA37251EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_344 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_201 /* Result */;
			targetProxy = FEEA37261EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_345 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_209 /* APIKit */;
			targetProxy = FEEA37271EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_346 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_239 /* LoggerAPI */;
			targetProxy = FEEA37281EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_347 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_246 /* HeliumLogger */;
			targetProxy = FEEA37291EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_348 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_256 /* SWXMLHash */;
			targetProxy = FEEA372A1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_349 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_264 /* Yaml */;
			targetProxy = FEEA372B1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_375 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_153 /* Spectre */;
			targetProxy = FEEA372C1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_376 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_167 /* Commander */;
			targetProxy = FEEA372D1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_377 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_184 /* Himotoki */;
			targetProxy = FEEA372E1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_378 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_201 /* Result */;
			targetProxy = FEEA372F1EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_379 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_209 /* APIKit */;
			targetProxy = FEEA37301EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_380 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_239 /* LoggerAPI */;
			targetProxy = FEEA37311EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_381 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_246 /* HeliumLogger */;
			targetProxy = FEEA37321EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_382 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_256 /* SWXMLHash */;
			targetProxy = FEEA37331EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_383 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_264 /* Yaml */;
			targetProxy = FEEA37341EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_384 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_303 /* LicensePlistCore */;
			targetProxy = FEEA37351EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
		OBJ_385 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_276 /* LicensePlist */;
			targetProxy = FEEA37361EBB4FEF003A1413 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_155 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Spectre_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Spectre;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Spectre;
			};
			name = Debug;
		};
		OBJ_156 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Spectre_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Spectre;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Spectre;
			};
			name = Release;
		};
		OBJ_169 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Commander_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Commander;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Commander;
			};
			name = Debug;
		};
		OBJ_170 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Commander_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Commander;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Commander;
			};
			name = Release;
		};
		OBJ_186 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Himotoki_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Himotoki;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Himotoki;
			};
			name = Debug;
		};
		OBJ_187 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Himotoki_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Himotoki;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Himotoki;
			};
			name = Release;
		};
		OBJ_203 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Result_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Result;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Result;
			};
			name = Debug;
		};
		OBJ_204 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Result_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Result;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Result;
			};
			name = Release;
		};
		OBJ_211 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/APIKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = APIKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = APIKit;
			};
			name = Debug;
		};
		OBJ_212 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/APIKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = APIKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = APIKit;
			};
			name = Release;
		};
		OBJ_241 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LoggerAPI_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LoggerAPI;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = LoggerAPI;
			};
			name = Debug;
		};
		OBJ_242 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LoggerAPI_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LoggerAPI;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = LoggerAPI;
			};
			name = Release;
		};
		OBJ_248 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/HeliumLogger_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = HeliumLogger;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = HeliumLogger;
			};
			name = Debug;
		};
		OBJ_249 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/HeliumLogger_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = HeliumLogger;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = HeliumLogger;
			};
			name = Release;
		};
		OBJ_258 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/SWXMLHash_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SWXMLHash;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = SWXMLHash;
			};
			name = Debug;
		};
		OBJ_259 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/SWXMLHash_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SWXMLHash;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = SWXMLHash;
			};
			name = Release;
		};
		OBJ_266 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Yaml_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Yaml;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Yaml;
			};
			name = Debug;
		};
		OBJ_267 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/Yaml_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Yaml;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = Yaml;
			};
			name = Release;
		};
		OBJ_278 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LicensePlist_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				TARGET_NAME = LicensePlist;
			};
			name = Debug;
		};
		OBJ_279 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LicensePlist_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				TARGET_NAME = LicensePlist;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_305 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LicensePlistCore_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LicensePlistCore;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = LicensePlistCore;
			};
			name = Debug;
		};
		OBJ_306 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LicensePlistCore_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LicensePlistCore;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				TARGET_NAME = LicensePlistCore;
			};
			name = Release;
		};
		OBJ_352 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LicensePlistTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				TARGET_NAME = LicensePlistTests;
			};
			name = Debug;
		};
		OBJ_353 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LicensePlist.xcodeproj/LicensePlistTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				TARGET_NAME = LicensePlistTests;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				SWIFT_VERSION = 3.0;
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_154 /* Build configuration list for PBXNativeTarget "Spectre" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_155 /* Debug */,
				OBJ_156 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_168 /* Build configuration list for PBXNativeTarget "Commander" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_169 /* Debug */,
				OBJ_170 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_185 /* Build configuration list for PBXNativeTarget "Himotoki" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_186 /* Debug */,
				OBJ_187 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "LicensePlist" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_202 /* Build configuration list for PBXNativeTarget "Result" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_203 /* Debug */,
				OBJ_204 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_210 /* Build configuration list for PBXNativeTarget "APIKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_211 /* Debug */,
				OBJ_212 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_240 /* Build configuration list for PBXNativeTarget "LoggerAPI" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_241 /* Debug */,
				OBJ_242 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_247 /* Build configuration list for PBXNativeTarget "HeliumLogger" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_248 /* Debug */,
				OBJ_249 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_257 /* Build configuration list for PBXNativeTarget "SWXMLHash" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_258 /* Debug */,
				OBJ_259 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_265 /* Build configuration list for PBXNativeTarget "Yaml" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_266 /* Debug */,
				OBJ_267 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_277 /* Build configuration list for PBXNativeTarget "LicensePlist" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_278 /* Debug */,
				OBJ_279 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_304 /* Build configuration list for PBXNativeTarget "LicensePlistCore" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_305 /* Debug */,
				OBJ_306 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_351 /* Build configuration list for PBXNativeTarget "LicensePlistTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_352 /* Debug */,
				OBJ_353 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
